name: DOSP Agent Autoposter

on:
  schedule:
    - cron: "0 9,15 * * *" # 09:00 & 15:00 UTC
  workflow_dispatch: {}

jobs:
  post:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install
        run: npm ci || npm i

      # --- Diagnose-Steps ---
      - name: Check env lengths (masked)
        run: |
          node -e "const s=n=>(process.env[n]||'').length; console.log({X_API_KEY:s('X_API_KEY'),X_API_SECRET:s('X_API_SECRET'),ACCESS_TOKEN:s('ACCESS_TOKEN'),ACCESS_SECRET:s('ACCESS_SECRET'),QUEUE_CSV:s('QUEUE_CSV'),GAS_WEBHOOK:s('GAS_WEBHOOK')});"
        env:
          X_API_KEY: ${{ secrets.X_API_KEY }}
          X_API_SECRET: ${{ secrets.X_API_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
          QUEUE_CSV: ${{ secrets.QUEUE_CSV }}
          GAS_WEBHOOK: ${{ secrets.GAS_WEBHOOK }}

      - name: Check CSV reachability
        run: |
          echo "HEAD $QUEUE_CSV"
          curl -sSI "$QUEUE_CSV" | head -n 1
        env:
          QUEUE_CSV: ${{ secrets.QUEUE_CSV }}

      - name: Check GAS webhook
        run: |
          echo "GET $GAS_WEBHOOK"
          curl -sS "$GAS_WEBHOOK"; echo
        env:
          GAS_WEBHOOK: ${{ secrets.GAS_WEBHOOK }}
      # --- /Diagnose-Steps ---

      - name: Post
        env:
          X_API_KEY: ${{ secrets.X_API_KEY }}
          X_API_SECRET: ${{ secrets.X_API_SECRET }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
          QUEUE_CSV: ${{ secrets.QUEUE_CSV }}
          GAS_WEBHOOK: ${{ secrets.GAS_WEBHOOK }}
        run: node index.js
